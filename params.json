{"name":"Leaves-client","tagline":"This is an experimental client for a immutable JSON document service","body":"### The Leaves Javascript Client\r\n\r\n> Leaves is exploratory and pre alpha.\r\n\r\nThis is the client for Leaves an experiental immutable JSON document\r\nservice.  The primary feature of this service is immutability.  You\r\ncan only _store_ and _read_ documents. You can not update them. \r\n\r\nYou *can* however operate on the documents but each operation creates\r\na new document.\r\n\r\nThis is a javascript client intended to connect to a Leaves.io service\r\nor one which implements the same api.\r\n\r\n### Quickstart\r\n\r\nTo get started clone or download this repository and copy the\r\n`leaves.js` or `leaves-min.js` from the `public/leaves-compressed/`\r\ndirectory to your web project. You will also need to copy the\r\n`public/js/vendor/cookies.js` file as well. [Or get it here.](//github.com/ScottHamper/Cookies)\r\n\r\nThen link to it in the head of your HTML document or template:\r\n\r\n```html\r\n<html>\r\n  <head>\r\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"></script>\r\n    <script src=\"//your-public-javascripts-dir/cookies.js\"></script>\r\n    <script src=\"//your-public-javascripts-dir/leaves-min.js\"></script>\r\n  </head>\r\n```\r\n\r\nThe easiest integration route is to create a json document as follows:\r\n\r\n```javascript\r\nYourApp = YourApp || {};\r\n\r\nYourApp.todos_json = Leaves.DocManager.from_cookie('org.example.todos_app.todos_list',\r\n                                                   { todos_list: [] });\r\n```\r\n\r\nThis creates a new JSON document on the scratch.leaves.io web\r\nservice or fetches an existing one if there is already a cookie set\r\nfor this client.\r\n\r\nNow that you have a todos list document you can operate on it.\r\n\r\n*Adding* to the end of an array:\r\n```javascript\r\nYourApp.todos_json.add(['todos_list'], { content: \"buy milk\" });\r\n// -> { todos_list: [ { content: \"buy milk\" } ] }\r\n\r\nYourApp.todos_json.add(['todos_list'], { content: \"copy car key\" });\r\n// -> { todos_list: [ { content: \"buy milk\" }, { content: \"copy car key\" } ] }\r\n```\r\n\r\nThe first argument to `add` is a path to the node in the JSON document\r\nthat you want to add something to. In this case `['todos_list']` is a\r\npath to the todos_list array in this document.\r\n\r\nThis data is now stored on the service.  If you want to track when\r\nchanges are made to the document simply attach a listener:\r\n\r\n```javascript\r\nYourApp.todos_json.changed( function(json_document) { \r\n  // do something awesome with the data\r\n} );\r\n```\r\n\r\n### Operations\r\n\r\nThe following is a whirlwind tour of the possible operations.\r\n\r\n#### Setting map keys\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Document Paths\r\n\r\nTodo\r\n","google":"UA-368586-6","note":"Don't delete this file! It's used internally to help with page regeneration."}